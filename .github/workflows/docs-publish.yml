# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Generate Documentation

on:
  push:
    branches: [ "master" ]

jobs:
  apidocs-publish:
    timeout-minutes: 5
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        java: [ 17 ]
      fail-fast: false
      max-parallel: 2
    name: Generate ApiDocs ${{ matrix.java }}, ${{ matrix.os }}
    steps:
      - name: Checkout github.io
        uses: actions/checkout@v3
        with:
          repository: jibijose/jibijose.github.io
          persist-credentials: false
      - name: Checkout httpbin
        uses: actions/checkout@v3
        with:
          repository: jibijose/httpbin
          path: githubhttpbin
          persist-credentials: false
      - name: Generating apidocs
        run: |
          cd githubhttpbin
          ./mvnw clean javadoc:javadoc
          cd ..
      - name: Copying apidocs
        run: |
          rm -rf httpbin/apidocs/*
          cp -rf githubhttpbin/target/site/apidocs/* httpbin/apidocs/
          rm -rf githubhttpbin
      - name: Commit changes
        run: |
          git config --local user.name "${gitapidocsname}"
          git config --local user.email "${gitapidocsemail}"
          git add httpbin/apidocs/*
          CURRENTDATE=`date +"%Y-%m-%d %T"`
          git commit -m "auto-build-apidocs-${CURRENTDATE}"
        env:
          gitapidocsname: ${{ secrets.GIT_APIDOCS_NAME }}
          gitapidocsemail: ${{ secrets.GIT_APIDOCS_EMAIL }}
      - name: Push to github
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GIT_APIDOCS_PAT }}
          repository: jibijose/jibijose.github.io
  site-publish:
    timeout-minutes: 10
    runs-on: ${{ matrix.os }}
    needs: [apidocs-publish]
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        java: [ 17 ]
      fail-fast: false
      max-parallel: 2
    name: Generate Site ${{ matrix.java }}, ${{ matrix.os }}
    steps:
      - name: Checkout github.io
        uses: actions/checkout@v3
        with:
          repository: jibijose/jibijose.github.io
          persist-credentials: false
      - name: Checkout httpbin
        uses: actions/checkout@v3
        with:
          repository: jibijose/httpbin
          path: githubhttpbin
          persist-credentials: false
      - name: Generating site
        run: |
          cd githubhttpbin
          ./mvnw clean package site
          cd ..
      - name: Copying site
        run: |
          rm -rf httpbin/site/*
          cp -rf githubhttpbin/target/site/* httpbin/site/
          rm -rf githubhttpbin
      - name: Commit changes
        run: |
          git config --local user.name "${gitsitename}"
          git config --local user.email "${gitsiteemail}"
          git add httpbin/site/*
          #git add --all
          #git add --force
          CURRENTDATE=`date +"%Y-%m-%d %T"`
          git commit -m "auto-build-site-${CURRENTDATE}"
        env:
          gitsitename: ${{ secrets.GIT_SITE_NAME }}
          gitsiteemail: ${{ secrets.GIT_SITE_EMAIL }}
      - name: Push to github
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GIT_SITE_PAT }}
          repository: jibijose/jibijose.github.io